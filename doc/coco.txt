*coco.txt* Vim code commentator

Version 1.2.0

Copyright (C) 2015-2022 Cyker Way

==============================================================================
0. Contents                                                             *coco*

    1. Intro  ................................. |coco-intro|
    2. Config ................................. |coco-config|
    3. Usage  ................................. |coco-usage|
    4. Mappings ............................... |coco-mappings|
    5. Commands ............................... |coco-commands|
    6. Source ................................. |coco-source|
    7. Donate ................................. |coco-donate|

==============================================================================
1. Intro                                                          *coco-intro*

This plugin provides an easy-to-use tool to comment, uncomment and toggle code
comments. Because line comments are much more widely used than block comments,
only line comments are supported. Users can control the line comment prefix by
means of strings and functions. The line comment prefix is based on file types
which play nicely with autocommands.

==============================================================================
2. Config                                                        *coco-config*

Users can config coco using these global variables:

*g:coco_pf_dict* (dict)

    This dict maps file types to prefix functions. A prefix function returns a
    string to be used as line comment prefix.

    This variable is optional.

*g:coco_ps_dict* (dict)

    This dict maps file types to prefix strings. A prefix string is directly
    used as line comment prefix. When both prefix function and prefix string
    exist for a file type, prefix function takes precedence. >

    g:coco_ps_dict = {
    \       'lua': '--',
    \   }
<
    This variable is optional.

*g:coco_ps* (string)

    This string is used as line comment prefix when there is neither prefix
    function nor prefix string defined for the file type. >

    g:coco_ps = '#'
<
    This variable is optional.

Normally, users only need to set |g:coco_ps_dict| and |g:coco_ps| in vimrc. In
rare cases, they may need a prefix function to select the correct line comment
prefix, using |g:coco_pf_dict|: >

    function MyCocoPFVim()
        if getline(1) == 'vim9script'
            return '#'
        else
            return '"'
        endif
    endfunction

    let g:coco_pf_dict = {
    \       'vim': function('MyCocoPFVim')
    \   }
<
==============================================================================
3. Usage                                                          *coco-usage*

This plugin uses autocommands to select the proper line comment prefix for the
current file type. When users have configured properly the line comment prefix
should be ready to use. The line comment prefix has buffer scope.

Users can use mappings |coco_mappings| and commands |coco_commands| to comment.

==============================================================================
4. Mappings                                                    *coco-mappings*

This plugin defines these mappings:

*<Plug>(coco_comment)*      Comment current line.
*<Plug>(coco_uncomment)*    Uncomment current line.
*<Plug>(coco_toggle)*       Toggle current line comment.

These mappings can take a range.

Users can map these mappings in vimrc: >

    noremap <Leader>c <Plug>(coco_comment)
    noremap <Leader>u <Plug>(coco_uncomment)
    noremap <Leader>t <Plug>(coco_toggle)
<
==============================================================================
5. Commands                                                    *coco-commands*

This plugin defines these ex commands:

*CocoComment*       Comment current line.
*CocoUncomment*     Uncomment current line.
*CocoToggle*        Toggle current line comment.

These commands can take a range.

==============================================================================
6. Source                                                        *coco-source*

https://github.com/cykerway/vim-coco

==============================================================================
7. Donate                                                        *coco-donate*

https://paypal.me/cykerway

vim:tw=78:ts=8:noet:ft=help:norl:
